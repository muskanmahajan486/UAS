<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
         http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       	 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd" >


	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName">
            <value>${jdbc.driverClassName}</value>
        </property>
        <property name="url">
            <value>${jdbc.url}</value>
        </property>
        <property name="username">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
    </bean>

	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<constructor-arg ref="transactionManager"/>
	</bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
        <property name="nestedTransactionAllowed" value="true"/>

    </bean>
    
    <bean id="baseSessionFactory"  class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" abstract="true">
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.openremote.useraccount.db.CustomMySQL5Dialect</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.OSCacheProvider</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>
	
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" parent="baseSessionFactory">
        <property name="dataSource" ref="dataSource" />
        <property name="annotatedClasses">
            <list>
                <value>org.openremote.useraccount.domain.Account</value>
                <value>org.openremote.useraccount.domain.User</value>
                <value>org.openremote.useraccount.domain.Role</value>
                <value>org.openremote.useraccount.domain.Controller</value>
            </list>
        </property>
    </bean>

	<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="resourceLoaderPath" value="/WEB-INF/"></property>
		<property name="velocityProperties">
			<value>
				resource.loader=class
				class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
			</value>
		</property>
	</bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
  		<property name="host" value="${mail.sender.host}" /> 
  		<property name="port" value="${mail.sender.port}" /> 
  		<property name="username" value="${mail.sender.username}" /> 
  		<property name="password" value="${mail.sender.password}" />
		<property name="javaMailProperties">
			<props>
	  			<prop key="mail.smtp.timeout">{mail.smtp.timeout}</prop> 
	  		</props>
  		</property>
  	</bean>
  	
	<bean id="genericDAO" class="org.openremote.useraccount.GenericDAO">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
    <bean id="component" class="org.restlet.ext.spring.SpringComponent">
        <property name="defaultTarget" ref="application"/>
    </bean>
    
    <bean id="application" class="org.openremote.useraccount.UserAccountServiceApplication">
    	<property name="dao" ref="genericDAO" />
        <property name="inboundRoot" ref="router"/>
    </bean>
    
    <bean name="router" class="org.restlet.ext.spring.SpringBeanRouter" />
    
<!-- Not implemented yet
    <bean name="/rest/accounts" class="org.openremote.useraccount.resources.AccountListCommandsResource" scope="prototype">
    	<property name="dao" ref="genericDAO" />
    </bean>
    
    <bean name="/rest/account" class="org.openremote.useraccount.resources.AccountCommandsResource" scope="prototype">
    	<property name="dao" ref="genericDAO" />
    </bean>

    <bean name="/rest/account/{accountOid}" class="org.openremote.useraccount.resources.AccountCommandsResource" scope="prototype">
    	<property name="dao" ref="genericDAO" />
    </bean>
 -->
 
    <bean name="/rest/users" class="org.openremote.useraccount.resources.UserListCommandsResource" scope="prototype">
    	<property name="dao" ref="genericDAO" />
    </bean>

    <bean name="/rest/user" class="org.openremote.useraccount.resources.UserCommandsResource" scope="prototype">
    	<property name="dao" ref="genericDAO" />
    	<property name="transactionTemplate" ref="transactionTemplate" />
    	<property name="velocityEngine" ref="velocityEngine"/>
    	<property name="mailSender" ref="mailSender"/>
    	<property name="designerWebappServerRoot" value="${designerWebapp.server.root}"/>
    </bean>

    <bean name="/rest/user/{userOid}" class="org.openremote.useraccount.resources.UserCommandsResource" scope="prototype">
    	<property name="dao" ref="genericDAO" />
    	<property name="velocityEngine" ref="velocityEngine"/>
    	<property name="mailSender" ref="mailSender"/>
    	<property name="designerWebappServerRoot" value="${designerWebapp.server.root}"/>
    </bean>
    
    <bean name="/rest/user/{userOid}/inviteUser" class="org.openremote.useraccount.resources.InviteUserCommandResource" scope="prototype">
    	<property name="dao" ref="genericDAO" />
    	<property name="velocityEngine" ref="velocityEngine"/>
    	<property name="mailSender" ref="mailSender"/>
    	<property name="designerWebappServerRoot" value="${designerWebapp.server.root}"/>
    	<property name="transactionTemplate" ref="transactionTemplate" />
    </bean>
    
    <bean name="/rest/user/{userName}/forgotPassword" class="org.openremote.useraccount.resources.ForgotPasswordCommandResource" scope="prototype">
    	<property name="dao" ref="genericDAO" />
    	<property name="velocityEngine" ref="velocityEngine"/>
    	<property name="mailSender" ref="mailSender"/>
    	<property name="designerWebappServerRoot" value="${designerWebapp.server.root}"/>
    	<property name="transactionTemplate" ref="transactionTemplate" />
    </bean>

    <bean name="/rest/controller" class="org.openremote.useraccount.resources.ControllerCommandsResource" scope="prototype">
    	<property name="dao" ref="genericDAO" />
    	<property name="transactionTemplate" ref="transactionTemplate" />
    </bean>

    <bean name="/rest/controller/{controllerOid}" class="org.openremote.useraccount.resources.ControllerCommandsResource" scope="prototype">
    	<property name="dao" ref="genericDAO" />
    	<property name="transactionTemplate" ref="transactionTemplate" />
    </bean>
    
    <bean name="/rest/controller/announce/{macAddresses}" class="org.openremote.useraccount.resources.ControllerCommandsResource" scope="prototype">
    	<property name="dao" ref="genericDAO" />
    	<property name="transactionTemplate" ref="transactionTemplate" />
    </bean>

    <bean name="/rest/controller/find/{macAddresses}" class="org.openremote.useraccount.resources.ControllerCommandsResource" scope="prototype">
    	<property name="dao" ref="genericDAO" />
    	<property name="transactionTemplate" ref="transactionTemplate" />
    </bean>
    
<!-- Not implemented yet
    <bean name="/rest/certificates" class="org.openremote.useraccount.resources.CertificateListCommandsResource" scope="prototype">
    	<property name="dao" ref="genericDAO" />
    </bean>
        
    <bean name="/rest/certificate" class="org.openremote.useraccount.resources.CertificateCommandsResource" scope="prototype">
    	<property name="dao" ref="genericDAO" />
    </bean>

    <bean name="/rest/certificate/{certificateId}" class="org.openremote.useraccount.resources.CertificateCommandsResource" scope="prototype">
    	<property name="dao" ref="genericDAO" />
    </bean>
-->

</beans>
