<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
             http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<security:http security="none" pattern="/rest/controller/announce/*"/>
	<security:http>
		<security:intercept-url pattern="/rest/controller/find" access="ROLE_ADMIN" />
		<security:intercept-url pattern="/rest/controller" access="ROLE_ADMIN" />
		<security:intercept-url pattern="/rest/controller/*" access="ROLE_ADMIN" />
		<security:intercept-url pattern="/rest/*" access="ROLE_ACCOUNT_MANAGER" />
		<security:http-basic />
	</security:http>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="SELECT U.username, U.password, U.valid AS 'enabled' FROM user U where U.username=?"
				authorities-by-username-query="SELECT U.username, R.name as 'authority' FROM user U JOIN user_role A ON U.oid = A.user_oid JOIN role R ON R.oid = A.role_oid WHERE U.username=?" />
			<security:password-encoder hash="md5">
				<security:salt-source user-property="username" />
			</security:password-encoder>
		</security:authentication-provider>
    <security:authentication-provider>
      <security:jdbc-user-service
        data-source-ref="dataSource"
        users-by-username-query="SELECT U.username, U.password, U.valid AS 'enabled' FROM user U where U.username=?"
        authorities-by-username-query="SELECT U.username, R.name as 'authority' FROM user U JOIN user_role A ON U.oid = A.user_oid JOIN role R ON R.oid = A.role_oid WHERE U.username=?" />
      <security:password-encoder hash="plaintext"/>
    </security:authentication-provider>
	</security:authentication-manager>

	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<property name="allowIfAllAbstainDecisions" value="false" />
		<property name="decisionVoters">
			<list>
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</property>
	</bean>

</beans>
